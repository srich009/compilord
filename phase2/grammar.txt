MINI-L Grammar

program
    : functions
    ;

functions
    : epsilon
    | function functions

function
    : FUNCTION identifiers SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    ;

declarations
    : epsilon
    | declaration SEMICOLON declarations
    ;

declaration
    : identifiers COLON INTEGER
    | identifiers COLON ARRAY OF L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    ;

identifiers
    : IDENT
    | IDENT COMMA identifiers
    ;

statements
    : epsilon
    | statement SEMICOLON statements
    ;

statement
    : var ASSIGN expression
    | IF bool-expr THEN statements ENDIF
    | IF bool-expr THEN statements ELSE statements ENDIF
    | WHILE bool-expr BEGINLOOP statements ENDLOOP
    | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
    | READ vars
    | WRITE vars
    | CONTINUE
    | RETURN expression
    ;

bool-expr
    : relation-and-expr
    | relation-and-expr OR relation-and-expr
    ;

relation-and-expr
    : relation-expr
    | relation-expr AND relation-expr
    ;

relation-expr
    : expression comp expression
    | TRUE
    | FALSE
    | L_PAREN bool-expr R_PAREN
    | NOT expression comp expression
    | NOT TRUE
    | NOT FALSE
    | NOT L_PAREN bool-expr R_PAREN
    ;

comp
    : EQ
    | NEQ
    | GT
    | LT
    | GTE
    | LTE
    ;

expressions
    : expression
    | expression COMMA expressions
    ;

expression
    : mult-expr ADD mult-expr
    | mult-expr SUB mult-expr
    ;

mult-expr
    : term mult-exprs
    ;

mult-exprs
    : epsilon
    | MULT term mult-exprs
    | DIV  term mult-exprs
    | MOD  term mult-exprs
    ;

term
    : var
    | NUMBER
    | L_PAREN expression R_PAREN
    | identifiers L_PAREN expressions R_PAREN
    | SUB var
    | SUB NUMBER
    | SUB L_PAREN expression R_PAREN
    ;

vars
    : var
    | var COMMA vars
    ;

var
    : identifiers
    | identifiers L_SQUARE_BRACKET expression R_SQUARE_BRACKET
    ;
