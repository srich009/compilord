Notes on phase3 version 2 based on t paynes compiler

----------------------------------------

the last part of the "Decl" statement is broken.
if declare a list of scalars it will set the first scalar as array, but the others are scalars

this declare
j,k : integer

becomes this mil code
. k
.[] j, 0

this is the specific rule

    | ID ',' Decl                           // right recursion *
        {
            rules << "VectorDec. ->  ID ',' VectorDecl \n";
            code  << ".[] " << *($1) << ", " << vectorSize << "\n"; // this will declare scalars in a list as array
        }

fix by changing the rule to scalars only.
in the example tests never saw a list of arrays, only lists of scalars

code << ". " << *$1 << "\n";

----------------------------------------

also a problem with the read writes,
it reads in the value, then it creates a temp variable, but doesnt output the declaration.
then it assigns to the temp. this causes an error of using an undeclared variable.

.< i
= _T0, i
.> _T0

Use of undeclared variable _T0

fix by adding a declaration after each temp is made

$$ = new string("_T" + to_string(reductionCt++));
code << ". " << *$$ << "\n";                        // declare temp

----------------------------------------


in a function declaration need to declare parameters and then set to the position arguments

in function calls need to handle parameters

the last things left are

init parameters in declaration
function call
returns
branches
loops
continue

